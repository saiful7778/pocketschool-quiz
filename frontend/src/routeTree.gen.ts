/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivateImport } from './routes/_private'
import { Route as AuthenticationImport } from './routes/_authentication'
import { Route as IndexImport } from './routes/index'
import { Route as PrivateProfileImport } from './routes/_private/profile'
import { Route as PrivateClassroomImport } from './routes/_private/classroom'
import { Route as PrivateSuperAdminImport } from './routes/_private/_superAdmin'
import { Route as AuthenticationRegisterImport } from './routes/_authentication/register'
import { Route as AuthenticationLoginImport } from './routes/_authentication/login'
import { Route as PrivateSuperAdminUserImport } from './routes/_private/_superAdmin/user'

// Create/Update Routes

const PrivateRoute = PrivateImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationRoute = AuthenticationImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PrivateProfileRoute = PrivateProfileImport.update({
  path: '/profile',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateClassroomRoute = PrivateClassroomImport.update({
  path: '/classroom',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateSuperAdminRoute = PrivateSuperAdminImport.update({
  id: '/_superAdmin',
  getParentRoute: () => PrivateRoute,
} as any)

const AuthenticationRegisterRoute = AuthenticationRegisterImport.update({
  path: '/register',
  getParentRoute: () => AuthenticationRoute,
} as any)

const AuthenticationLoginRoute = AuthenticationLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthenticationRoute,
} as any)

const PrivateSuperAdminUserRoute = PrivateSuperAdminUserImport.update({
  path: '/user',
  getParentRoute: () => PrivateSuperAdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateImport
      parentRoute: typeof rootRoute
    }
    '/_authentication/login': {
      id: '/_authentication/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthenticationLoginImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/register': {
      id: '/_authentication/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthenticationRegisterImport
      parentRoute: typeof AuthenticationImport
    }
    '/_private/_superAdmin': {
      id: '/_private/_superAdmin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateSuperAdminImport
      parentRoute: typeof PrivateImport
    }
    '/_private/classroom': {
      id: '/_private/classroom'
      path: '/classroom'
      fullPath: '/classroom'
      preLoaderRoute: typeof PrivateClassroomImport
      parentRoute: typeof PrivateImport
    }
    '/_private/profile': {
      id: '/_private/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof PrivateProfileImport
      parentRoute: typeof PrivateImport
    }
    '/_private/_superAdmin/user': {
      id: '/_private/_superAdmin/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof PrivateSuperAdminUserImport
      parentRoute: typeof PrivateSuperAdminImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticationRoute: AuthenticationRoute.addChildren({
    AuthenticationLoginRoute,
    AuthenticationRegisterRoute,
  }),
  PrivateRoute: PrivateRoute.addChildren({
    PrivateSuperAdminRoute: PrivateSuperAdminRoute.addChildren({
      PrivateSuperAdminUserRoute,
    }),
    PrivateClassroomRoute,
    PrivateProfileRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authentication",
        "/_private"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authentication": {
      "filePath": "_authentication.tsx",
      "children": [
        "/_authentication/login",
        "/_authentication/register"
      ]
    },
    "/_private": {
      "filePath": "_private.tsx",
      "children": [
        "/_private/_superAdmin",
        "/_private/classroom",
        "/_private/profile"
      ]
    },
    "/_authentication/login": {
      "filePath": "_authentication/login.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/register": {
      "filePath": "_authentication/register.tsx",
      "parent": "/_authentication"
    },
    "/_private/_superAdmin": {
      "filePath": "_private/_superAdmin.tsx",
      "parent": "/_private",
      "children": [
        "/_private/_superAdmin/user"
      ]
    },
    "/_private/classroom": {
      "filePath": "_private/classroom.tsx",
      "parent": "/_private"
    },
    "/_private/profile": {
      "filePath": "_private/profile.tsx",
      "parent": "/_private"
    },
    "/_private/_superAdmin/user": {
      "filePath": "_private/_superAdmin/user.tsx",
      "parent": "/_private/_superAdmin"
    }
  }
}
ROUTE_MANIFEST_END */
